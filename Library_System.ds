/*
 * Author       : saranit803
 * Generated on : 04-Jan-2025 15:08:32
 * Version      : 1.0
 */
 application "Library System"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Kolkata"
 	time format = "24-hr"
 	section Book_Modules
	{
		displayname= "Book Modules"
		icon = "design-book-open"
		form Book_Module
		{
			displayname = "Book Module"
			success message = "Book Module Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Book_ID
			(
    			type = text
				displayname = "Book ID"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Author
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Genre
			(
				type = picklist
				maxchar = 100
				values = {"Fiction","Non-Fiction","Sci-Fi","Biography"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Publication_Year
			(
				type = number
				displayname = "Publication Year"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Available_Copies
			(
				type = number
				displayname = "Available Copies"
				initial value = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
			unique ISBN_Number
			(
				type = number
				displayname = "ISBN Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rating
			(
				type = number
				maxchar = 5
				initial value = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			Auto_Number
			(
    			type = autonumber
				displayname = "Auto Number"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			Featured
			(
				type = checkboxes	
				displayname = "Mark  as Featured"
				values = {"yes","No"}
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-book-open"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Book_Modules
		{
			displayName = "All Book Modules"
			show all rows from Book_Module    
			(
				Genre
				Available_Copies as "Available Copies"
				ISBN_Number as "ISBN Number"
				Rating
				Publication_Year as "Publication Year"
				Title
				Author
				Book_ID as "Book ID"
				Auto_Number as "Auto Number"
				Featured as "Mark  as Featured"
				custom action "Featured Books"
				(
	  			workflow = Mark_as_Featured
				show action in edit record menu = true
				column header = "Featured Books"
				condition = (Featured == "yes")
				confirmation before execution
				(
					message for individual record = "Execute the Featured Books action for this record?"
					confirm button text = "Yes"		
					cancel button text = "No"
				)
				)
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							"Featured Books"
							Genre
							Available_Copies as "Available Copies"
							ISBN_Number as "ISBN Number"
							Rating
							Publication_Year as "Publication Year"
							Title
							Book_ID as "Book ID"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Genre
							Available_Copies as "Available Copies"
							ISBN_Number as "ISBN Number"
							Rating
							Publication_Year as "Publication Year"
							Title
							Author
							Book_ID as "Book ID"
							Auto_Number as "Auto Number"
							Featured as "Mark  as Featured"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list featured
		{
			displayName = "featured"
			show all rows from Book_Module  [Featured == "yes"]  
			(
				Book_ID as "Book ID"
				Title
				Author
				Genre
				Publication_Year as "Publication Year"
				Available_Copies as "Available Copies"
				ISBN_Number as "ISBN Number"
				Rating
				Auto_Number as "Auto Number"
				Featured as "Mark  as Featured"
				custom action "Mark as Featured"
				(
	  			workflow = Mark_as_feaatured
				show action in edit record menu = true
				column header = "Mark as Featured"
				)
			)
			options
			(
				icon = "media-1-album"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Book_ID as "Book ID"
							Title
							Author
							Genre
							Publication_Year as "Publication Year"
							Available_Copies as "Available Copies"
							ISBN_Number as "ISBN Number"
							"Mark as Featured"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Book_ID as "Book ID"
							Title
							Author
							Genre
							Publication_Year as "Publication Year"
							Available_Copies as "Available Copies"
							ISBN_Number as "ISBN Number"
							Rating
							Auto_Number as "Auto Number"
							Featured as "Mark  as Featured"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Members_Module
	{
		displayname= "Members Module"
		icon = "tech-2-l-search"
		form Members_Module
		{
			displayname = "Members Module"
			success message = "Data Added Successfully!"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Member_ID
			(
    			type = text
				displayname = "Member ID"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			unique Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Phone_Number2
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Membership_Start_Date
			(
    			type = date
				displayname = "Membership Start Date"
				initial value = "02-Jan-2025"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Membership_Type
			(
				type = picklist
				displayname = "Membership Type"
				maxchar = 100
				values = {"Basic","Premium","Elite"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Maximum_Book_Allowed
			(
				type = number
				displayname = "Maximum Book Allowed"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Auto_Number
			(
    			type = autonumber
				displayname = "Auto Number"
				start index = 10
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-l-search"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Members_Module_Report
		{
			displayName = "Members Module Report"
			show all rows from Members_Module    
			(
				Email
				Membership_Start_Date as "Membership Start Date"
				Membership_Type as "Membership Type"
				Maximum_Book_Allowed as "Maximum Book Allowed"
				Member_ID as "Member ID"
				Auto_Number as "Auto Number"
				Phone_Number2 as "Phone Number"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Email
							Membership_Start_Date as "Membership Start Date"
							Membership_Type as "Membership Type"
							Maximum_Book_Allowed as "Maximum Book Allowed"
							Member_ID as "Member ID"
							Auto_Number as "Auto Number"
							Name
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Email
							Membership_Start_Date as "Membership Start Date"
							Membership_Type as "Membership Type"
							Maximum_Book_Allowed as "Maximum Book Allowed"
							Member_ID as "Member ID"
							Auto_Number as "Auto Number"
							Phone_Number2 as "Phone Number"
							Name
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Transaction_Modules
	{
		displayname= "Transaction Modules"
		icon = "tech-2-pci-card"
		form Transaction_Module
		{
			displayname = "Transaction Module"
			success message = "Transaction Module Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Transaction_ID
			(
    			type = text
				displayname = "Transaction ID"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Member
			(
				type = picklist	
				values  = Members_Module.ID
    			displayformat = [Member_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Book
			(
				type = picklist	
				displayname = "Book "
				values  = Book_Module.ID
    			displayformat = [Book_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Auto_Number
			(
    			type = autonumber
				displayname = "Auto Number"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			Issue_Date
			(
    			type = date
				displayname = "Issue Date"
				initial value = "02-Jan-2025"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Return_Date
			(
    			type = date
				displayname = "Return Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Issued","Returned","Over dee"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Fine_Amount
			(
				displayname = "Fine Amount"
				type = INR
				format = commadotindian
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-l-search"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Transaction_Modules
		{
			displayName = "All Transaction Modules"
			show all rows from Transaction_Module    
			(
				Transaction_ID as "Transaction ID"
				Auto_Number as "Auto Number"
				Member
				Book as "Book "
				Issue_Date as "Issue Date"
				Return_Date as "Return Date"
				Status
				Fine_Amount as "Fine Amount"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Transaction_ID as "Transaction ID"
							Auto_Number as "Auto Number"
							Member
							Book as "Book "
							Issue_Date as "Issue Date"
							Return_Date as "Return Date"
							Status
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Transaction_ID as "Transaction ID"
							Auto_Number as "Auto Number"
							Member
							Book as "Book "
							Issue_Date as "Issue Date"
							Return_Date as "Return Date"
							Status
							Fine_Amount as "Fine Amount"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list OverDue_Details1
		{
			displayName = "OverDue Details"
			show all rows from Transaction_Module    
			(
				Transaction_ID as "Transaction ID"
				Member
				Book as "Book "
				Auto_Number as "Auto Number"
				Issue_Date as "Issue Date"
				Return_Date as "Return Date"
				Status
				Fine_Amount as "Fine Amount"
				Member.Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
			)
			options
			(
				icon = "users-2-contacts-44"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Member
							Member.Name as "Name"
							Fine_Amount as "Fine Amount"
							Transaction_ID as "Transaction ID"
							Book as "Book "
							Issue_Date as "Issue Date"
							Return_Date as "Return Date"
							Status
							Auto_Number as "Auto Number"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Transaction_ID as "Transaction ID"
							Member
							Book as "Book "
							Auto_Number as "Auto Number"
							Issue_Date as "Issue Date"
							Return_Date as "Return Date"
							Status
							Fine_Amount as "Fine Amount"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Staff_Member_Modules
	{
		displayname= "Staff Member Modules"
		icon = "holidays-sickle"
		form Staff_Member_Module
		{
			displayname = "Staff Member Module"
			success message = "Staff Member Module Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Staff_ID
			(
    			type = text
				displayname = "Staff ID"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Role
			(
				type = picklist
				maxchar = 100
				values = {"Librarian","Assistant"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number1
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Auto_Number
			(
    			type = autonumber
				displayname = "Auto Number"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "holidays-sickle"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Staff_Member_Modules
		{
			displayName = "All Staff Member Modules"
			show all rows from Staff_Member_Module    
			(
				Staff_ID as "Staff ID"
				Name
				Email
				Role
				Phone_Number1 as "Phone Number"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Auto_Number as "Auto Number"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Staff_ID as "Staff ID"
							Name
							Email
							Role
							Phone_Number1 as "Phone Number"
							Auto_Number as "Auto Number"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Staff_ID as "Staff ID"
							Name
							Email
							Role
							Phone_Number1 as "Phone Number"
							Auto_Number as "Auto Number"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Dashboard
	{
		icon = "ui-1-dashboard-half"
		page Dashboard
		{
			displayname = "Dashboard"
			icon = "ui-1-dashboard-half"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<chart \n\telementName=\"Chart\"\n\n\ttype = 'Donut'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme2'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Book_Module'\n\txfield = 'Genre'\n\tyfields = 'count:Genre'\n\/>\n\n<\/column><column\n   \t\t width=\"0%\"\n   \t>\n\t<chart \n\telementName=\"Chart 2\"\n\n\ttype = 'Pie'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Book_Module'\n\txfield = 'Genre'\n\tyfields = 'count:Genre'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\telementName=\"Report\"\n\n\t\tappLinkName = 'thisapp'\n\t\tlinkName = 'All_Book_Modules'\n\t\n\t\tiszreport = 'false'\n\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page Staff_Activity_Log
		{
			displayname = "Staff Activity Log"
			icon = "health-pulse"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<chart \n\telementName=\"Chart 3\"\n\n\t\n\ttitle = 'Season&apos;s performance'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Pie'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Staff_Member_Module'\n\txfield = 'Role'\n\tyfields = 'count:ID'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"51%\"\n   \t>\n\t<chart \n\telementName=\"Chart\"\n\n\t\n\ttitle = 'Goals by county'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Bar'\n\tbgColor = '#FFFFFF'\n\ttheme = '#819bec'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Staff_Member_Module'\n\txfield = 'Name'\n\tyfields = 'count:ID'\n\/>\n\n<\/column><column\n   \t\t width=\"49%\"\n   \t>\n\t<chart \n\telementName=\"Chart 1\"\n\n\ttype = 'Bar'\n\tbgColor = '#FFFFFF'\n\ttheme = '#ff8b82'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Staff_Member_Module'\n\txfield = 'Name'\n\tyfields = 'count:ID'\n\/>\n\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
	}






		workflow
		{
		form
		{
			Generate_Book_ID1 as "Generate Book ID"
			{
				type =  form
				form = Book_Module
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											latestvalue = Book_Module[ID != 0].maximum(Auto_Number);
										newvalue = ifnull(latestvalue,0) + 1;
										input.Book_ID = "ID-" + newvalue;
						)
					}
				}

			}
			Rating1 as "Rating"
			{
				type =  form
				form = Book_Module
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Rating < 1 || input.Rating > 5)
										{
											alert "Rating must be between 1 and 5.";
											cancel submit;
										}
						)
					}
				}

			}
			Publication_Year as "Publication Year"
			{
				type =  form
				form = Book_Module
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Publication_Year < 1900 || input.Publication_Year > 2025)
										{
											alert "Publication Year must be between 1900 and the current year.";
											cancel submit;
										}
						)
					}
				}

			}
			Generate_member_id as "Generate member id"
			{
				type =  form
				form = Members_Module
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											latestvalue = Members_Module[ID != 0].maximum(Auto_Number);
										newvalue = ifnull(latestvalue,0) + 23;
										input.Member_ID = "Member ID-" + newvalue;
						)
					}
				}

			}
			Generate_Transaction_ID1 as "Generate Transaction ID"
			{
				type =  form
				form = Transaction_Module
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											latestvalue = Transaction_Module[ID != 0].maximum(Auto_Number);
										newvalue = ifnull(latestvalue,0) + 19;
										input.Transaction_ID = "Trans ID-" + newvalue;
						)
					}
				}

			}
			Staff_ID3 as "Staff ID"
			{
				type =  form
				form = Staff_Member_Module
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											latestvalue = Staff_Member_Module[ID != 0].maximum(Auto_Number);
										newvalue = ifnull(latestvalue,0) + 12;
										input.Staff_ID = "StaffID-" + newvalue;
						)
					}
				}

			}
			IssueDate as "IssueDate"
			{
				type =  form
				form = Transaction_Module
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Issue_Date = zoho.currentdate;
						)
					}
				}

			}
			Memebership_Start_Date as "Memebership Start Date"
			{
				type =  form
				form = Members_Module
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Membership_Start_Date = zoho.currentdate;
						)
					}
				}

			}
			Return_Date as "Return Date"
			{
				type =  form
				form = Transaction_Module
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Return_Date <= input.Issue_Date)
										{
											alert "Return Date must be greater than Issue Date.";
											cancel submit;
										}
						)
					}
				}

			}
			fine_Amount1 as "fine Amount1"
			{
				type =  form
				form = Transaction_Module
				record event = on add

				on user input of Fine_Amount
				{
					actions 
					{
						custom deluge script
						(
											if(input.Return_Date > input.Issue_Date)
										{
											overdue_days = (input.Return_Date - input.Issue_Date) / (1000 * 60 * 60 * 24);
											fine_amount = overdue_days * 2;
											input.Fine_Amount = fine_amount;
										}
										else
										{
											input.Fine_Amount = 0;
										}
						)
					}
				}

			}
			generate_email as "generate email"
			{
				type =  form
				form = Transaction_Module
				record event = on add

				on success
				{
					actions  (Status == "Over dee")
					{
						sendmail
						(
							from : "zoho.adminuserid"
							to : "zoho.loginuserid"
							subject : "Overdue book Notification"
							message : "<div>Dear&nbsp;${Member},<br></div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br></div><div>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"background-color:rgb(255, 255, 255)\" class=\"highlight\"><span style=\"color:rgb(0, 0, 0)\" class=\"colour\"><span style=\"font-family:Arial, Helvetica, sans-serif\" class=\"font\"><span style=\"font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none;\" class=\"size\">This is a reminder that you have <b>overdue books in our library.</b> Please&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; find the details of the overdue books and the associated fines ybelow:</span></span></span></span><br></div><div><span style=\"background-color:rgb(255, 255, 255)\" class=\"highlight\"><span style=\"color:rgb(0, 0, 0)\" class=\"colour\"><span style=\"font-family:Arial, Helvetica, sans-serif\" class=\"font\"><span style=\"font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none;\" class=\"size\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></span></span></span><br></div><div><br></div><div>&nbsp;<b> Your Details:${Member}</b><b><br></b></div><div><b>&nbsp;date of Issue:${Issue_Date} </b><b><br></b></div><div><b>&nbsp;date of return:${Return_Date}</b><b><br></b></div><div><b>&nbsp;Fine Amount:${Fine_Amount}</b><b><br></b></div><div><br></div><p style=\"font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\"><span style=\"background-color:rgb(255, 255, 255)\" class=\"highlight\"><span style=\"color:rgb(0, 0, 0)\" class=\"colour\"><span style=\"font-family:Arial, Helvetica, sans-serif\" class=\"font\"><span style=\"font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\" class=\"size\"><b>Total Fine:${Fine_Amount}</b><br></span></span></span></span></p><p style=\"font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\"><span style=\"background-color:rgb(255, 255, 255)\" class=\"highlight\"><span style=\"color:rgb(0, 0, 0)\" class=\"colour\"><span style=\"font-family:Arial, Helvetica, sans-serif\" class=\"font\"><span style=\"font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\" class=\"size\">Please return the books as soon as possible to avoid further fines. You can make the payment via our online system or at the library desk.<br></span></span></span></span></p><p style=\"font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\"><span style=\"background-color:rgb(255, 255, 255)\" class=\"highlight\"><span style=\"color:rgb(0, 0, 0)\" class=\"colour\"><span style=\"font-family:Arial, Helvetica, sans-serif\" class=\"font\"><span style=\"font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\" class=\"size\"><b>If you have already returned the books</b>, please disregard this email, or contact us for further assistance.<br></span></span></span></span></p><p style=\"font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\"><span style=\"background-color:rgb(255, 255, 255)\" class=\"highlight\"><span style=\"color:rgb(0, 0, 0)\" class=\"colour\"><span style=\"font-family:Arial, Helvetica, sans-serif\" class=\"font\"><span style=\"font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\" class=\"size\">Thank you for your cooperation.<br></span></span></span></span></p><p style=\"font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\"><span style=\"background-color:rgb(255, 255, 255)\" class=\"highlight\"><span style=\"color:rgb(0, 0, 0)\" class=\"colour\"><span style=\"font-family:Arial, Helvetica, sans-serif\" class=\"font\"><span style=\"font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration: none;\" class=\"size\"></span></span></span></span><br></p><div>Best Regards,<br></div><div>${Member}<br></div><div>${zoho.adminuserid}<br></div><p><br></p><div><br></div>"
						)
					}
				}

			}
			Validate_unique_ISBN as "Validate unique ISBN"
			{
				type =  form
				form = Book_Module
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(Book_Module[ISBN_Number == input.ISBN_Number].count() > 0)
										{
											alert "ISBN Number must be Unique! Please enter a different ISBN.";
										}
						)
					}
				}

			}
			Auto_fill_Max_Books_Allow as "Auto-fill Max Books Allowed"
			{
				type =  form
				form = Members_Module
				record event = on add or edit

				on user input of Membership_Type
				{
					actions 
					{
						custom deluge script
						(
											if(input.Membership_Type == "Basic")
										{
											input.Maximum_Book_Allowed = 2;
										}
										else if(input.Membership_Type == "Premium")
										{
											input.Maximum_Book_Allowed = 5;
										}
										else if(input.Membership_Type == "Elite")
										{
											input.Maximum_Book_Allowed = 10;
										}
						)
					}
				}

			}
			Auto_fill_Max_Books_Allow1 as "Auto-fill Max Books Allowed"
			{
				type =  form
				form = Members_Module
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Membership_Type == "Basic")
										{
											input.Maximum_Book_Allowed = 2;
											if(Maximum_Book_Allowed > 2)
											{
												alert "For Basic Membership allowed Book is 2";
												cancel submit;
											}
										}
										else if(input.Membership_Type == "Premium")
										{
											input.Maximum_Book_Allowed = 5;
											if(Maximum_Book_Allowed > 5)
											{
												alert "For Premium Membership allowed Book is 5";
												cancel submit;
											}
										}
										else if(input.Membership_Type == "Elite")
										{
											input.Maximum_Book_Allowed = 10;
											if(Maximum_Book_Allowed > 10)
											{
												alert "For Elite Membership allowed Book is 10";
												cancel submit;
											}
										}
						)
					}
				}

			}
			Set_role_based_Permisions as "Set role-based Permisions"
			{
				type =  form
				form = Staff_Member_Module
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											role = input.Role;
										if(role == "Librarian")
										{
											info "Staff member is a Librarian.They can issue and return books.";
										}
										else if(role == "Assitant")
										{
											info "Staff member is a Librarian.They cannot issue or return books.";
											sendmail
											[
												from :zoho.loginuserid
												to :input.Email
												subject :"Restricted Permissions"
												message :"<div>As an Assitant,you do not have permission to issue or return books</div>"
											]
										}
										else
										{
											info "Unknown role.Please Check the input data";
										}
						)
					}
				}

			}
			Increasing_Available_Copi as "Increasing Available Copies(When Book Returned)"
			{
				type =  form
				form = Transaction_Module
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											bookRecord = Book_Module[ID == input.Book];
										if(bookRecord != null)
										{
											bookRecord.Available_Copies=bookRecord.Available_Copies + 1;
											input.Book.update(bookRecord.ID,bookRecord);
										}
										else
										{
											alert "Error:Unable to locate the book record";
										}
						)
					}
				}

			}
			Decreasing_Available_Copi as "Decreasing Available Copies(When Book Issued)"
			{
				type =  form
				form = Transaction_Module
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											bookRecord = Book_Module[ID == input.Book];
										if(bookRecord != null)
										{
											bookRecord.Available_Copies=bookRecord.Available_Copies - 1;
											input.Book.update(bookRecord.ID,bookRecord);
										}
										else
										{
											alert "Error:Unable to locate the book record";
										}
						)
					}
				}

			}
		}






		functions
		{
			featured as "featured"
			{
				type =  functions
				form = Book_Module
				execution type = for each record	
				on start
				{
				}
			}
			Featured1 as "Featured"
			{
				type =  functions
				form = Book_Module
				execution type = for each record	
				on start
				{
				}
			}
			Mark_as_Featured as "Mark as Featured"
			{
				type =  functions
				form = Book_Module
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						if(input.Featured == "Yes")
										{
											input.Featured = "Yes";
										}
										else
										{
											input.Featured = "No";
										}
					)
					}
				}
			}
			Mark_as_feaatured as "Mark as feaatured"
			{
				type =  functions
				form = Book_Module
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						if(input.Featured == "No")
										{
											input.Featured = "Yes";
										}
										else
										{
											input.Featured = "No";
										}
					)
					}
				}
			}
		}
	}
	share_settings
	{
			"Developer"
			{
				name = "Developer"
				type = Developer
				permissions = {Chat:false, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Developer Profile\n"
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Librarian"
			{
				name = "Librarian"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Librarian Profile\n"
				ModulePermissions
				{
					Staff_Member_Module
					{
						allFieldsVisible= true 
					}
					Book_Module
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Book_Modules={"View","Edit","Delete"}
						}
					}
					Members_Module
					{
						allFieldsVisible= true 
					}
					Transaction_Module
					{
						allFieldsVisible= true 
					}
				}
			}
			"Assistant"
			{
				name = "Assistant"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Assistant Profile\n"
				ModulePermissions
				{
					Staff_Member_Module
					{
						allFieldsVisible= true 
					}
					Book_Module
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Book_Modules={"View"}
						}
					}
					Members_Module
					{
						allFieldsVisible= true 
					}
					Transaction_Module
					{
						allFieldsVisible= true 
					}
				}
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users."
					"Librarian"
					{
						description = ""
					}
					"Assistant"
					{
						description = ""
					}
				}
			}
			Sharing_Rules
			{
				"view book"
				{
					form = "Book_Module"
					sharedFromType = Roles
					sharedToType = Roles
					levelOfAccess = "Read"
					sharedFrom = "Assistant"
					sharedTo = "CEO"
				}
				"books"
				{
					form = "Book_Module"
					sharedFromType = Roles
					sharedToType = Roles
					levelOfAccess = "Read/Write"
					sharedFrom = "Librarian"
					sharedTo = "CEO"
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 8
		icons = true
		icons style = outline
		font = "lato"
		color options
    	{
        color = "1"
    	}
    	logo
    	{
        	preference = "app_icon"
        	placement = "left"
    	}
	}


	phone
	{
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "default"
            style = "3"
        	color options
        	{
             	color = amethyst
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	tablet
	{
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "default"
            style = "3"
        	color options
        	{
             	color = amethyst
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	translation
{
{"Language_Settings":{"LANGAGUE_WITH_LOGIN":"browser"}}
}
}
